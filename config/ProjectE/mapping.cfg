# Configuration file

enabledmappers {
    # Allows other Mods to add Recipes to the EMC Calculation. [default: true]
    B:APICustomConversionMapper=true

    # Allows other mods to set EMC values using the ProjectEAPI [default: true]
    B:APICustomEMCMapper=true

    # Add Conversions for Crafting Recipes gathered from net.minecraft.item.crafting.CraftingManager [default: true]
    B:CraftingMapper=true

    # Uses json files within config/ProjectE/customConversions/ to add values and conversions [default: true]
    B:CustomConversionMapper=true

    # Uses the `custom_emc.json` File to add EMC values. [default: true]
    B:CustomEMCMapper=true

    # Adds Conversions for fluid container items and fluids. [default: true]
    B:FluidMapper=true

    # Blacklist some OreDictionary names from getting an EMC value [default: true]
    B:OreDictionaryMapper=true

    # Add Conversions for `FurnaceRecipes` [default: true]
    B:SmeltingMapper=true
}


general {
    # Want to take a look at the internals of EMC Calculation? Enable this to write all the conversions and setValue-Commands to config/ProjectE/mappingdump.json [default: false]
    B:dumpEverythingToFile=false

    # Log known EMC Exploits. This can not and will not find all possible exploits. This will only find exploits that result in fixed/custom emc values that the algorithm did not overwrite. Exploits that derive from conversions that are unknown to ProjectE will not be found. [default: true]
    B:logEMCExploits=false

    # When the next EMC mapping occurs write the results to config/ProjectE/pregenerated_emc.json and only ever run the mapping again when that file does not exist, this setting is set to false, or an error occurred parsing that file. [default: false]
    B:pregenerate=false
}


mapperconfigurations {

    oredictionarymapper {
        # Set EMC=0 for everything that has an OD Name that starts with `ore`, `dust` or `crushed` besides `dustPlastic` [default: true]
        B:blacklistOresAndDusts=true
    }

    apicustomemcmapper {

        customemcpriorities {
            # Priority for Mod with ModId = abyssalcraft. Values: 310 [range: 0 ~ 512, default: 1]
            I:abyssalcraftpriority=1
            I:crafttweakerpriority=1

            # Priority for Mod with ModId = defiledlands. Values: 19 [range: 0 ~ 512, default: 1]
            I:defiledlandspriority=1
            I:equivalentenergisticspriority=1

            # Priority for Mod with ModId = expequiv. Values: 2612 [range: 0 ~ 512, default: 1]
            I:expequivpriority=1
            I:thaumicequivalencepriority=1
        }

        permissions {

            abyssalcraft {
                # Allow 'abyssalcraft' to set and or remove values for 'abyssalcraft'. Options: [both, set, remove, none] [default: both]
                S:abyssalcraft=both
                S:actuallyadditions=both

                # Allow 'abyssalcraft' to set and or remove values for 'appliedenergistics2'. Options: [both, set, remove, none] [default: both]
                S:appliedenergistics2=both
                S:environmentaltech=both

                # Allow 'abyssalcraft' to set and or remove values for 'forge'. Options: [both, set, remove, none] [default: both]
                S:forge=both

                # Allow 'abyssalcraft' to set and or remove values for 'jaopca'. Options: [both, set, remove, none] [default: both]
                S:jaopca=both

                # Allow 'abyssalcraft' to set and or remove values for 'mekanism'. Options: [both, set, remove, none] [default: both]
                S:mekanism=both

                # Allow 'abyssalcraft' to set and or remove values for 'minecraft'. Options: [both, set, remove, none] [default: both]
                S:minecraft=both
                S:taiga=both

                # Allow 'abyssalcraft' to set and or remove values for 'thermalfoundation'. Options: [both, set, remove, none] [default: both]
                S:thermalfoundation=both
            }

            defiledlands {
                # Allow 'defiledlands' to set and or remove values for 'IntermediateFakeItemsUsedInRecipes'. Options: [both, set, remove, none] [default: both]
                S:IntermediateFakeItemsUsedInRecipes=both

                # Allow 'defiledlands' to set and or remove values for 'defiledlands'. Options: [both, set, remove, none] [default: both]
                S:defiledlands=both
            }

            thaumicequivalence {
                S:IntermediateFakeItemsUsedInRecipes=both
                S:forge=both
                S:minecraft=both
                S:rusticthaumaturgy=both
                S:solarflux=both
                S:tconevo=both
                S:thaumadditions=both
                S:thaumcraft=both
                S:thaumicaugmentation=both
                S:thaumicbases=both
                S:thaumicenergistics=both
                S:thaumicperiphery=both
                S:thaumictinkerer=both
                S:thaumicwonders=both
            }

            expequiv {
                # Allow 'expequiv' to set and or remove values for 'IntermediateFakeItemsUsedInRecipes'. Options: [both, set, remove, none] [default: both]
                S:IntermediateFakeItemsUsedInRecipes=both

                # Allow 'expequiv' to set and or remove values for 'actuallyadditions'. Options: [both, set, remove, none] [default: both]
                S:actuallyadditions=both

                # Allow 'expequiv' to set and or remove values for 'appliedenergistics2'. Options: [both, set, remove, none] [default: both]
                S:appliedenergistics2=both

                # Allow 'expequiv' to set and or remove values for 'astralsorcery'. Options: [both, set, remove, none] [default: both]
                S:astralsorcery=both

                # Allow 'expequiv' to set and or remove values for 'avaritia'. Options: [both, set, remove, none] [default: both]
                S:avaritia=both
                S:bloodmagic=both

                # Allow 'expequiv' to set and or remove values for 'botania'. Options: [both, set, remove, none] [default: both]
                S:botania=both

                # Allow 'expequiv' to set and or remove values for 'draconicevolution'. Options: [both, set, remove, none] [default: both]
                S:draconicevolution=both
                S:enderio=both

                # Allow 'expequiv' to set and or remove values for 'forestry'. Options: [both, set, remove, none] [default: both]
                S:forestry=both
                S:ic2=both
                S:immersiveengineering=both

                # Allow 'expequiv' to set and or remove values for 'minecraft'. Options: [both, set, remove, none] [default: both]
                S:minecraft=both

                # Allow 'expequiv' to set and or remove values for 'mysticalagradditions'. Options: [both, set, remove, none] [default: both]
                S:mysticalagradditions=both

                # Allow 'expequiv' to set and or remove values for 'mysticalagriculture'. Options: [both, set, remove, none] [default: both]
                S:mysticalagriculture=both

                # Allow 'expequiv' to set and or remove values for 'techreborn'. Options: [both, set, remove, none] [default: both]
                S:techreborn=both

                # Allow 'expequiv' to set and or remove values for 'thaumcraft'. Options: [both, set, remove, none] [default: both]
                S:thaumcraft=both

                # Allow 'expequiv' to set and or remove values for 'thermalfoundation'. Options: [both, set, remove, none] [default: both]
                S:thermalfoundation=both
            }

            equivalentenergistics {
                S:equivalentenergistics=both
            }

            crafttweaker {
                S:abyssalcraft=both
                S:actuallyadditions=both
                S:additions=both
                S:aether_legacy=both
                S:akashictome=both
                S:appliedenergistics2=both
                S:avaritia=both
                S:bibliocraft=both
                S:biomesoplenty=both
                S:bloodmagic=both
                S:botania=both
                S:botania_tweaks=both
                S:cfm=both
                S:compactmachines3=both
                S:conarm=both
                S:cookingforblockheads=both
                S:cyclicmagic=both
                S:defiledlands=both
                S:draconicevolution=both
                S:enderio=both
                S:extrautils2=both
                S:fluxnetworks=both
                S:forestry=both
                S:forge=both
                S:ftbquests=both
                S:guideapi=both
                S:hammercore=both
                S:jaopca=both
                S:logisticspipes=both
                S:minecraft=both
                S:mysticalagradditions=both
                S:mysticalagriculture=both
                S:natura=both
                S:netherex=both
                S:nyx=both
                S:openblocks=both
                S:openmodularturrets=both
                S:patchouli=both
                S:projecte=both
                S:projectex=both
                S:pvj=both
                S:quark=both
                S:redstonearsenal=both
                S:rftools=both
                S:rftoolscontrol=both
                S:scalinghealth=both
                S:solcarrot=both
                S:spiceoflife=both
                S:taiga=both
                S:tconevo=both
                S:tconstruct=both
                S:thaumadditions=both
                S:thaumcraft=both
                S:theoneprobe=both
                S:thermalfoundation=both
                S:tinkersaether=both
                S:xnet=both
                S:yoyos=both
            }

        }

    }

    customconversionmapper {
        # Read file: ODdefaults.json? [default: true]
        B:ODdefaults=true

        # Read file: defaults.json? [default: true]
        B:defaults=true

        # Read file: metals.json? [default: true]
        B:metals=true
    }

    craftingmapper {

        irecipeimplementations {
            # Maps `IRecipe` CraftTweaker crafting recipes that extend `MCRecipeShaped` or `MCRecipeShapeless [default: true]
            B:enableCraftTweakerRecipeMapper=true

            # Maps custom IRecipe's from ProjectE [default: true]
            B:enablePECustomRecipeMapper=true

            # Maps `RecipeStage` implementation of `IRecipe` from Recipe Stages [default: true]
            B:enableRecipeStagesRecipeMapper=true

            # Maps `IRecipe` crafting recipes that extend `ShapedRecipes` or `ShapelessRecipes`, and their oredict equivalents [default: true]
            B:enableVanillaRecipeMapper=true
        }

    }

    smeltingmapper {
        # If X has a value and is smelted from Y, Y will get a value too. This is an experimental thing and might result in Mappings you did not expect/want to happen. [default: false]
        B:doBackwardsMapping=false
    }

    apicustomconversionmapper {

        allow {
            # Allow Mod expequiv to add its 48097 Recipes to the EMC Calculation [default: true]
            B:expequiv=true
            B:thaumicequivalence=true
        }

    }

}


